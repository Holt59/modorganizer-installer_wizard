# -*- encoding: utf-8 -*-

from pathlib import Path
from typing import List, Mapping

from wizard.tweaks import WizardINISetting, WizardINISettingEdit


def make_obscript_ini_tweaks(tweaks: List[WizardINISetting]) -> str:

    lines = []

    for tweak in tweaks:
        if not isinstance(tweak, WizardINISettingEdit):
            continue
        line = f"{tweak.section} {tweak.setting} to {tweak.value}"
        if tweak.comment:
            line += f" ; {tweak.comment}"

        lines.append(line)

    return "\n".join(["; Generated by Mod Organizer 2 via Wizard"] + sorted(lines))


def make_standard_ini_tweaks(tweaks: List[WizardINISetting]) -> str:

    # Group Tweaks per section:
    sections: Mapping[str, List[WizardINISetting]] = {m.section: [] for m in tweaks}
    for m in tweaks:
        sections[m.section].append(m)

    lines = []

    for k in sorted(sections):
        s_tweaks = sorted(sections[k], key=lambda m: m.setting)
        lines.append(f"[{k}]")
        for tw in s_tweaks:
            if isinstance(tw, WizardINISettingEdit):
                line = f"{tw.setting} = {tw.value}"
                if tw.comment:
                    line += f" # {tw.comment}"
            else:
                line = f"# {tw.setting} - disabled"
            lines.append(line)
        lines.append("\n")

    return "\n".join(lines[:-1])


def make_ini_tweaks(tweaks: List[WizardINISetting]) -> str:

    is_set = [tw.section in ("set", "setGS", "SetNumericGameSetting") for tw in tweaks]

    # Assume there is no mix.
    if all(is_set):
        return make_obscript_ini_tweaks(tweaks)
    else:
        return make_standard_ini_tweaks(tweaks)


def merge_ini_tweaks(tweaks: List[WizardINISetting], file: Path) -> str:

    is_set = [tw.section in ("set", "setGS", "SetNumericGameSetting") for tw in tweaks]

    # Assume there is no mix.
    if all(is_set):
        pass
    else:
        pass
    return ""
